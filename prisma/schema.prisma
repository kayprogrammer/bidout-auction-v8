//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id String @id() @unique() @default(uuid())
    createdAt DateTime @map(name: "created_at") @default(now())
    updatedAt DateTime @map(name: "updated_at") @updatedAt()
    /// @length(max: 50, message: '50 characters max')
    firstName String @map(name: "first_name")
    /// @length(max: 50, message: '50 characters max')
    lastName String @map(name: "last_name")
    /// @length(min: 5, message: '5 characters min')
    email String
    password String
    isEmailVerified Boolean @map(name: "is_email_verified") @default(false)
    isSuperuser Boolean @map(name: "is_superuser") @default(false)
    isStaff Boolean @map(name: "is_staff") @default(false)
    termsAgreement Boolean @map(name: "terms_agreement") @default(false)
    avatarId String @map(name: "avatar_id")
    avatar File @relation(fields: [avatarId], references: [id])
    reviews Review[]

    @@map("users")
    @@unique([email])
}

model GuestUser {
    id String @id() @unique() @default(uuid())
    createdAt DateTime @map(name: "created_at") @default(now())
    updatedAt DateTime @map(name: "updated_at") @updatedAt()

    @@map("guest_users")
}

model File {
    id String @id() @unique() @default(uuid())
    createdAt DateTime @map(name: "created_at") @default(now())
    updatedAt DateTime @map(name: "updated_at") @updatedAt()
    resourceType String @map(name: "resource_type")
    users User[]

    @@map("files")
}

model SiteDetail {
    id String @id() @unique() @default(uuid())
    createdAt DateTime @map(name: "created_at") @default(now())
    updatedAt DateTime @map(name: "updated_at") @updatedAt()
    name String @default("Kay's Auction House")
    email String @default("kayprogrammer1@gmail.com")
    phone String @default("+2348133831036")
    address String @default("234, Lagos, Nigeria")
    fb String @default("https://facebook.com")
    tw String @default("https://twitter.com")
    wh String @default("https://wa.me/2348133831036")
    ig String @default("https://instagram.com")

    @@map("site_details")
}

model Subscriber {
    id String @id() @unique() @default(uuid())
    createdAt DateTime @map(name: "created_at") @default(now())
    updatedAt DateTime @map(name: "updated_at") @updatedAt()
    email String
    exported Boolean @default(false)

    @@map("subscribers")
}

model Review {
    id String @id() @unique() @default(uuid())
    createdAt DateTime @map(name: "created_at") @default(now())
    updatedAt DateTime @map(name: "updated_at") @updatedAt()
    reviewerId String @map(name: "reviewer_id")
    reviewer User @relation(fields: [reviewerId], references: [id])
    show Boolean @default(false)
    /// @length(max: 200, message: '200 characters max')
    text String

    @@map("reviews")
}