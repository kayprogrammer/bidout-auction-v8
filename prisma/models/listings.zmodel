import "base"

model Category extends BaseModel {
  @@map("categories")

  name				  String      @unique @length(max: 30, message: "30 characters max")	
	slug				  String      @unique 

  // Not needed but compulsory according to design
  listings           Listing[]
}

model Listing extends BaseModel {
  @@map("listings")

  auctioneerId		String	    @db.Uuid @map(name: "auctioneer_id")
  auctioneer		User		@relation(fields: [auctioneerId], references: [id], onDelete: Cascade)
  name              String      @length(max: 70, message: "70 characters max")
  slug				  String      @unique 
  desc              String     
  categoryId		String?	    @db.Uuid @map(name: "category_id")
  category		    Category?		@relation(fields: [categoryId], references: [id], onDelete: SetNull)
  price             Decimal     @db.Decimal(10, 2) 
  highestBid        Decimal     @map(name: "highest_bid") @db.Decimal(10, 2) @default(0.00)
  bidsCount         Int         @map(name: "bids_count") @default(0)
  closingDate       DateTime    @map(name: "closing_date") 
  active            Boolean     @default(true)
  imageId		    String	  @db.Uuid @map(name: "image_id")
  image            File	    @relation(fields: [imageId], references: [id], onDelete: SetNull)

  // Not needed but compulsory according to design
  watchlists    Watchlist[]
  bids          Bid[]

}

model Bid extends BaseModel {
  @@map("bids")

  userId 	    String		@db.Uuid @map(name: "user_id")
  user 		    User 		@relation(fields: [userId], references: [id], onDelete: Cascade)
  listingId     String		@db.Uuid @map(name: "listing_id")
  listing 		Listing 	@relation(fields: [listingId], references: [id], onDelete: Cascade)
  amount		Decimal	    @db.Decimal(10, 2)

  @@unique([listingId, amount], name: "unique_listing_amount_bids")
  @@unique([userId, listingId], name: "unique_user_listing_bids")
}

model Watchlist extends BaseModel {
  @@map("watchlists")

  userId 	    String?		@db.Uuid @map(name: "user_id")
  user 		    User? 		@relation(fields: [userId], references: [id], onDelete: Cascade)
  listingId     String		@db.Uuid @map(name: "listing_id")
  listing 		Listing 	@relation(fields: [listingId], references: [id], onDelete: Cascade)
  sessionKey 	String?		@db.Uuid @map(name: "session_key")
  guest 		GuestUser? 	@relation(fields: [sessionKey], references: [id], onDelete: Cascade)

  @@unique([userId, listingId], name: "unique_user_listing_watchlists")
  @@unique([sessionKey, listingId], name: "unique_session_key_listing_watchlists")
}